##!/bin/bash

## A quick self-contained test of the makedelta system
## Not a replacement for the real tests so much as a development aid

## Uses:
## Four databases, A, B, C, and D (aka mtest1 mtest2 mtest3 mtest4)
## One table: foobar
## Two syncs: ABC A <=> B <=> C  AD  A -> D
## For safety, this runs on port 5492.
## Do not change it to 5432, as this drops the bucordo database! :)
## This must be run from the root bucordo source code directory

sudo mkdir /var/run/bucordo 2>/dev/null
sudo chown $USER.$USER /var/run/bucordo 2>/dev/null

export PGPORT=5492

## Ensure we use the bucordo.pm in the current directory
export PERL5LIB=.

## Quick check that our scripts compile cleanly
perl -c bucordo || exit
perl -c bucordo.pm || exit

## Just in case, stop any running bucordos
./bucordo stop --quiet 2>/dev/null

## Bail if the cluster is not reachable
psql -q -c 'select 1' >/dev/null 2>/dev/null

if [[ $? -ne 0 ]];then
  echo Could not connect to Postgres on port $PGPORT
  exit
fi

## Terminate any old connections, and drop databases
echo Dropping existing test databases
psql -AX -qt -c "select pg_terminate_backend(pid) FROM pg_stat_activity where datname IN ('mtest1','mtest2','mtest3','mtest4','bucordo')" >/dev/null
psql -qc 'drop database mtest1' 2>/dev/null
psql -qc 'drop database mtest2' 2>/dev/null
psql -qc 'drop database mtest3' 2>/dev/null
psql -qc 'drop database mtest4' 2>/dev/null
psql -qc 'drop database bucordo' 2>/dev/null

## Create the databases and add our tables
echo Creating test databases
psql -qc 'create database mtest1'
psql mtest1 -qc 'create sequence mseq increment by 3 start with 1'
psql mtest1 -qc "create table foobar(id int not null default nextval('mseq'), email text)"
psql mtest1 -qc "create unique index foobar_unique on foobar(id)"

## Make sure we are staggering sequences for A,B,C
psql -qc 'create database mtest2 template mtest1'
psql mtest2 -qc 'alter sequence mseq restart with 2'

psql -qc 'create database mtest3 template mtest1'
psql mtest3 -qc 'alter sequence mseq restart with 3'

## This one gets no sequence fiddling
psql -qc 'create database mtest4 template mtest1'

echo Installing bucordo
./bucordo install --batch --quiet
./bucordo set log_level=debug --quiet

echo Adding databases A B C D
./bucordo add db A dbname=mtest1 --quiet
./bucordo add db B dbname=mtest2 --quiet
./bucordo add db C dbname=mtest3 --quiet
./bucordo add db D dbname=mtest4 --quiet
echo Adding table, relgroup, and syncs
./bucordo add table foobar db=A relgroup=mgroup --quiet
./bucordo add sync ABC relgroup=mgroup dbs=A:source,B:source,C:source --quiet
./bucordo add sync AD relgroup=mgroup dbs=A:source,D:target --quiet

echo Starting bucordo
rm -f log.bucordo
./bucordo start --logdest=. --quiet
sleep 4

echo Adding a row to A and B and C goes out to the others
psql -AX -qt mtest1 -c "insert into foobar(email) values ('alice')"
psql -AX -qt mtest2 -c "insert into foobar(email) values ('bob')"
psql -AX -qt mtest3 -c "insert into foobar(email) values ('charlie')"
sleep 2

psql -At mtest1 -c "select 'A:', array_agg(email ORDER BY email) from foobar"
psql -At mtest2 -c "select 'B:', array_agg(email ORDER BY email) from foobar"
psql -At mtest3 -c "select 'C:', array_agg(email ORDER BY email) from foobar"

echo Makedelta is off, so D only has rows that came directly to A:
psql -At mtest4 -c "select 'D:', array_agg(email ORDER BY email) from foobar"

./bucordo update table foobar makedelta=A

./bucordo stop --quiet
sleep 2

echo Makedelta is on for A, so rows will now go out to D
psql -AX -qt mtest1 -c "insert into foobar(email) values ('alice2')"
psql -AX -qt mtest2 -c "insert into foobar(email) values ('bob2')"
psql -AX -qt mtest3 -c "insert into foobar(email) values ('charlie2')"

./bucordo start --logdest=. --quiet
sleep 3

psql -At mtest1 -c "select 'A:', array_agg(email ORDER BY email) from foobar"
psql -At mtest2 -c "select 'B:', array_agg(email ORDER BY email) from foobar"
psql -At mtest3 -c "select 'C:', array_agg(email ORDER BY email) from foobar"
psql -At mtest4 -c "select 'D:', array_agg(email ORDER BY email) from foobar"

echo Kicking sync AD, as it may have completed before the latest ABCD ran
./bucordo kick AD 0

psql -At mtest4 -c "select 'D:', array_agg(email ORDER BY email) from foobar"


echo Stopping bucordo
./bucordo stop --quiet

